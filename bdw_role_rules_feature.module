<?php
/**
 * @file
 * Code for the bdw_role_rules_feature feature.
 */

include_once 'bdw_role_rules_feature.features.inc';

// Implementation of hook_mail_alter() 
function bdw_role_rules_feature_mail_alter(&$message) {
  // if this is a user registration email, customize it based on the role 
  // (i.e. member vs. affiliate)
  if ($message['id'] == 'logintoboggan_register_no_approval_required')
  {
    $account = $message['params']['account'];

    if (!in_array('affiliate',$account->roles))
    {
      return;
    }
    $message['body'][0] = t('!username,', array('!username' => $account->name));

    $message['body'][] = t('Thank you for registering as an affiliate at Boondockers Welcome. You may now log in to !login_uri using the following username and password:', 
      array('!login_uri' => url('user', array('absolute' => TRUE, 'language' => $message['language']))));

    $message['body'][] = t('username: !username<br>npassword: !password',
      array('!username' => $account->name,
            '!password' => $account->password));

    $message['body'][] = t('You may also log in by clicking on this link or copying and pasting it in your browser:');
    $timestamp = time();
    $message['body'][] = t('!login_url',
        array('!login_url' => logintoboggan_eml_validate_url($account, array('absolute' => TRUE))));

    $message['body'][] = t('This is a one-time login, so it can be used only once.<p>After logging in, you will be redirected to the "Account Info" page so you can change your password to one of your choosing.');
    $message['body'][] = t('Once logged in, you can find images and links to share with your personalized affiliate code under the "Affiliate Center" tab. From there you can also check statistics on the number of times your links have been clicked, the number of orders you have generated, and commissions you are owed. Note that if a user visits our site from one of your links, a cookie will be saved on their computer so that if they visit again and sign up any time within six months, you will earn the commission for that sale.');
    $message['body'][] = t('Please note that the account you have created is only active for the purposes of checking your affiliate sales in the "affiliate center" tab. If you wish to become a full member at any point with the ability to message other members and boondock on their property, you can upgrade this account to a <a href="/membership-products">full membership</a>.');  
    $message['body'][] = t('Thanks for coming on board, we look forward to working with you!');
    $message['body'][] = t('-- The !site team', 
      array('!site' => variable_get('site_name', 'Boondockers Welcome')));
  }
  else if ($message['id'] == 'user_register_no_approval_required')
  {
    $account = $message['params']['account'];
    $message['body'][0] = t('!username,', array('!username' => $account->name));
    $message['body'][] = t('Thank you for joining Boondockers Welcome. You may now log in to !login_uri using the following username and password:', 
      array('!login_uri' => url('user', array('absolute' => TRUE, 'language' => $message['language']))));
    $message['body'][] = t('username: !username<br>password: !password',
      array('!username' => $account->name,
            '!password' => $account->password));
    $message['body'][] = t('You may also log in by clicking on this link or copying and pasting it in your browser:');
    $timestamp = time();
    $message['body'][] = t('!login_url',
        array('!login_url' => logintoboggan_eml_validate_url($account, array('absolute' => TRUE))));
    $message['body'][] = t('This is a one-time login, so it can be used only once.<p>After logging in, you will be redirected to the "Account Info" page so you can change your password to one of your choosing.');
    $message['body'][] = t('-- The !site team', 
      array('!site' => variable_get('site_name', 'Boondockers Welcome')));
  }
}

function bdw_role_rules_feature_uc_get_message_alter(&$messages) {
  $messages['completion_new_user'] = t('Welcome to Boondockers Welcome! Your payment has been processed, and your membership is now active.<p>A message with your login details and a separate welcome email should arrive in your inbox shortly. Please check your spam folder if you do not receive either of them, and add us to your contact list so that you can be sure to receive future emails from us and notifications of messages from other members.<p>You will be notified by email one month before your membership expires.');

 $messages['completion_existing_user'] = $messages['completion_new_user'];

 $messages['completion_logged_in'] = t('Thank you! Your payment has been processed, and your membership to Boondockers Welcome is now renewed. You will be notified by email one month before your membership next expires.');
}

function bdw_role_rules_feature_theme_registry_alter(&$theme_registry)
{
  if (!empty($theme_registry['uc_cart_complete_sale'])) {
    $theme_registry['uc_cart_complete_sale']['function'] = 'bdw_role_rules_feature_theme_uc_cart_complete_sale';
  }
}

function bdw_role_rules_feature_theme_uc_cart_complete_sale($variables) {

 // message is set assuming a purchase of a membership, set correctly depending on whether they are a new member or renewing from an existing account
  $memb_message = $variables['message'];
  $variables['message'] = ''; // empty it for now

  foreach ($variables['order']->products as $product)
  {
    if ($product->data['type'] == 'membership_level')
    { 
      // add back the membership purchase message
      $variables['message'] .= $memb_message;
      if (preg_match("/^FullMembership-BDA-.*/", $product->model)) {
        // add details about host memberships
        $variables['message'] .= t('<p>Because you have purchased a host membership that requires you provide a boondocking location, you must ensure that you have a valid one entered under the Boondocking Available tab of your account settings. Your membership will not be fully activated until you do.');
      }
    }
    else
    {
      // Then we have a regular product - probably a gift certificate
      if (preg_match("/^GiftMembership.*/", $product->model)) {
        $variables['message'] .= t('<p>Thank you for purchasing a gift membership to Boondockers Welcome. You will receive an email with the code(s) that you can print or forward on to your recipients.</p>');
      }
    }
  }
  return $variables['message'];
}
             
function bdw_role_rules_feature_default_rules_configuration_alter(&$configs) {

  if (isset($configs['uc_role_notify_revoke']))
  {
    foreach($configs['uc_role_notify_revoke']->actions() as $action)
    {
      $action->settings['subject'] = t('Your membership at [store:name] has expired');
      $action->settings['message'] = t("Your membership at Boondockers Welcome has expired! Until you renew, you will no longer be able to send or receive messages, view your bookmarks, or leave recommendations for other members. Please renew your membership as soon as possible by visiting <a href='http://www.boondockerswelcome.com/membership-products'>our membership products page</a>.\n\nWe hope to see you back soon,\n\n[store:name]\n[site:slogan]"); 
    }
  }

  if (isset($configs['uc_checkout_admin_notification']))
  {
    foreach($configs['uc_checkout_admin_notification']->actions() as $action)
    {
      $action->settings['addresses'] = 'admin@boondockerswelcome.com
    marianne@boondockerswelcome.com';
    }
  }

  $disable_list = array(
    // disable uc_checkout_customer_notification - we will instead do this 
    // when the order goes into "complete". This will allow orders that are 
    // placed by hand (i.e. upgrades charges for $5, etc), to be invoiced as 
    // well as automated orders through the cart.
//    'uc_checkout_customer_notification',
    // disable default notify emails; expiry doesn't work.
    'uc_role_notify_grant',
    'uc_role_notify_renew',
    'uc_role_notify_reminder',
  );

  foreach ($disable_list as $setting)
  {
    if (isset($configs[$setting]))
    {
      $configs[$setting]->active = 0;
    }
  }
}

function bdw_role_rules_feature_userpoints_role_extended($uid, $rid, $txn_id, $expiry, $new_expiry, $tid) {
  $flag = flag_get_flag('membership_expiring');
  if ($flag && $flag->is_flagged($uid)) {
    // user is marked as expiring, undo that
    // even if the new expiry is still in the "expiring" window, the
    // 'notified' flag will have been reset, and the cron job will re-set the
    // expiring flag again.
    $flag->flag('unflag', $uid);
  }
}
